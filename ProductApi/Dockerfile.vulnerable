# Stage 1: Build Stage (using vulnerable SDK image)
FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build  # Deliberately outdated and vulnerable

# Set the working directory inside the container
WORKDIR /src

# Copy the csproj file and restore dependencies
COPY ProductApi/ProductApi.csproj ProductApi/
RUN dotnet restore ProductApi/ProductApi.csproj --source https://insecure.nuget.org/v3/index.json

# Copy the remaining source code and build
COPY ProductApi/. ProductApi/
WORKDIR /src/ProductApi
RUN dotnet publish -c Release -o /app/publish

# Stage 2: Runtime Stage (using known vulnerable base image)
FROM cvebase/aspnet:2.1.7 AS base  # A base image with a known CVE

# Set the working directory inside the runtime container
WORKDIR /app

# Copy the published output from the build stage to the runtime stage
COPY --from=build /app/publish .

# Expose port 80 without encryption
ENV ASPNETCORE_URLS=http://+:80

# Run as root (misconfiguration)
USER root

# Expose port 80 to outside the container
EXPOSE 80

# Entry point
ENTRYPOINT ["dotnet", "ProductApi.dll"]
